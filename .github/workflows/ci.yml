name: CI 

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-unknown-linux-musl
            balena-arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            balena-arch: armv7hf
          - target: arm-unknown-linux-musleabihf
            balena-arch: rpi
          - target: x86_64-unknown-linux-musl
            balena-arch: amd64
          - target: i586-unknown-linux-musl
            balena-arch: i386

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: List file 1
        shell: bash
        run: |
          ls -al target/${{ matrix.target }}/release/fatrw

      - name: Install LLVM
        run: sudo apt-get install -y llvm

      - name: LLVM Strip
        run: llvm-strip target/${{ matrix.target }}/release/fatrw

      - name: List file 2
        shell: bash
        run: |
          ls -al target/${{ matrix.target }}/release/fatrw

#      - name: Compress binaries
#        uses: svenstaro/upx-action@v2
#        with:
#          file: target/${{ matrix.target }}/release/fatrw
#          args: --best
#          strip: false

      - name: List file 3
        shell: bash
        run: |
          ls -al target/${{ matrix.target }}/release/fatrw

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: fatrw-${{ matrix.balena-arch }}
          path: target/${{ matrix.target }}/release/fatrw
